# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
var_1: &default_docker_image circleci/node:lts

var_2: &cache_key v1-dependencies-{{ checksum "yarn.lock" }}

var_3: &workdir /home/circleci/repo

var_4: &only-deploy-tags
  filters:
    tags:
      only: /^v.*/
    branches:
      ignore: /.*/

version: 2.1

executors:
  my-executor:
    docker:
      - image: *default_docker_image
    working_directory: *workdir
  sonar-executor:
    docker:
      - image: cwiggert/circleci-node-java:0.0.3
    working_directory: *workdir

jobs:
  checkout_code:
    executor: my-executor
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - *cache_key
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: *cache_key
      - persist_to_workspace:
          root: .
          paths: .

  linter:
    executor: my-executor
    steps:
      - attach_workspace:
          at: *workdir
      - run: yarn lint:report
      - persist_to_workspace:
          root: .
          paths: reports/lint_issues.json

  test_cov:
    executor: my-executor
    steps:
      - attach_workspace:
          at: *workdir
      - run: yarn test:cov
      - persist_to_workspace:
          root: .
          paths:
            - coverage/lcov.info
            - reports/test-reporter.xml

  test:
    executor: my-executor
    steps:
      - attach_workspace:
          at: *workdir
      - run: yarn test

  build:
    executor: my-executor
    steps:
      - attach_workspace:
          at: *workdir
      - run: yarn build
      - persist_to_workspace:
          root: .
          paths: dist

  sonar_pullrequest:
    executor: sonar-executor
    steps:
      - attach_workspace:
          at: *workdir
      # Create extra env Variables
      - run: cat ./.circleci/scripts/extra-variables.sh >> $BASH_ENV
      #Â Fix CircleCI repo references
      - run: ./.circleci/scripts/fix-circleci-repo-ref.sh
      - run: ./node_modules/sonar-scanner/bin/sonar-scanner -Dsonar.organization=bikecoders -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONARCLOUD_TOKEN -Dsonar.pullrequest.base=$BC_PR_BASE_BRANCH -Dsonar.pullrequest.branch=$BC_PR_BRANCH -Dsonar.pullrequest.key=$BC_PR_ID

  sonar_master:
    executor: sonar-executor
    steps:
      - attach_workspace:
          at: *workdir
      - run: ./node_modules/sonar-scanner/bin/sonar-scanner -Dsonar.organization=bikecoders -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONARCLOUD_TOKEN

  deploy:
    executor: my-executor
    steps:
      - attach_workspace:
          at: *workdir
      - add_ssh_keys
      - run: echo "$know_host_server_value" >> ~/.ssh/known_hosts
      - run: .circleci/deployment/deploy.sh

workflows:
  version: 2

  analize:
    jobs:
      # Don't do this on tags
      - checkout_code:
        filters:
          tags:
            ignore: /.*/
      - linter:
          requires:
            - checkout_code
      - test_cov:
          requires:
            - checkout_code
      - build:
          requires:
            - checkout_code
      - sonar_pullrequest:
          requires:
            - linter
            - test_cov
          filters:
            branches:
              ignore: master
      - sonar_master:
          requires:
            - linter
            - test_cov
          filters:
            branches:
              only: master

  deploy:
    jobs:
      - checkout_code: *only-deploy-tags
      - build:
          <<: *only-deploy-tags
          requires:
            - checkout_code
      - linter:
          <<: *only-deploy-tags
          requires:
            - checkout_code
      - test:
          <<: *only-deploy-tags
          requires:
            - checkout_code
      - deploy:
          <<: *only-deploy-tags
          requires:
            - build
            - linter
            - test
